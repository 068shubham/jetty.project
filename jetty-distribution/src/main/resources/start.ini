#===========================================================
# Jetty start.jar arguments
#
# The contents of this file, together with the start.ini
# fragments found in start.d directory are used to build
# the classpath and command line on a call to
#    java -jar start.jar [arg...]
#
# Use the following command to see more options
#    java -jar start.jar --help
#
# Each line in this file is prepended to the command line
# as arguments, which may be either:
#  + A property like: name=value
#  + A file of properties like: /etc/myjetty.properties
#  + A classpath option like: OPTION=jmx
#  + An XML configuration file like: etc/jetty-feature.xml
#  + A start.jar option like: --dry-run
#
# If --exec or --exec-print are used, then this file may also 
# contain lines with:
#  + A JVM option like: -Xmx2000m 
#  + A System Property like: -Dcom.sun.management.jmxremote
#
#-----------------------------------------------------------
#
# NOTE: The lines in this file may be uncommented to activate
# features. Alternately, the lines may be copied to a ini file
# in the start.d directory to enabled configuration without
# editing this file.  See start.d/900-demo.ini for an example.
#
# Future releases will switch start.d style configuration for 
# all features.
#===========================================================



#===========================================================
# Configure JVM arguments.
# If JVM args are include in an ini file then --exec is needed
# to start a new JVM from start.jar with the extra args.
# If you wish to avoid an extra JVM running, place JVM args
# on the normal command line and do not use --exec
#-----------------------------------------------------------
# --exec
# -Xmx2000m
# -Xmn512m
# -XX:+UseConcMarkSweepGC
# -XX:ParallelCMSThreads=2
# -XX:+CMSClassUnloadingEnabled  
# -XX:+UseCMSCompactAtFullCollection
# -XX:CMSInitiatingOccupancyFraction=80
# -verbose:gc
# -XX:+PrintGCDateStamps
# -XX:+PrintGCTimeStamps
# -XX:+PrintGCDetails
# -XX:+PrintTenuringDistribution
# -XX:+PrintCommandLineFlags
# -XX:+DisableExplicitGC
# -Dorg.apache.jasper.compiler.disablejsr199=true


#===========================================================
# Default Server Options
# Use the core server jars with websocket on the classpath
# Add the contents of the resources directory to the classpath
# Add jars discovered in lib/ext to the classpath
# Include the core jetty configuration file
#-----------------------------------------------------------
threads.min=10
threads.max=200
threads.timeout=60000
#jetty.host=myhost.com
jetty.dump.start=false
jetty.dump.stop=false

#===========================================================
# JMX Management
# To enable remote JMX access uncomment jmxremote and
# enable --exec 
#-----------------------------------------------------------
--module=jmx
# jetty.jmxrmihost=localhost
# jetty.jmxrmiport=1099
# -Dcom.sun.management.jmxremote

#===========================================================
# Java Server Pages
#-----------------------------------------------------------
--module=jsp

#===========================================================
# Request logger
# Will add a handler to log all HTTP requests to a standard
# request log format file.
#-----------------------------------------------------------
# --module=requestlog
# requestlog.retain=90
# requestlog.append=true
# requestlog.extended=true


#===========================================================
# stderr/stdout logging.
# The following configuration will redirect stderr and stdout
# to file which is rolled over daily.
#-----------------------------------------------------------
# --module=logging
# jetty.log.retain=90

#===========================================================
# Enable SetUID
# The default user and group is 'jetty' and if you are
# starting as root you must change the run privledged to true
#-----------------------------------------------------------
# --module=setuid
# jetty.startServerAsPrivileged=false
# jetty.username=jetty
# jetty.groupname=jetty
# jetty.umask=002


#===========================================================
# HTTP Connector
#-----------------------------------------------------------
--module=http
jetty.port=8080
http.timeout=30000


#===========================================================
# SSL Context 
# Create the keystore and trust store for use by
# HTTPS and SPDY
#-----------------------------------------------------------
# jetty.keystore=etc/keystore
# jetty.keystore.password=OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4
# jetty.keymanager.password=OBF:1u2u1wml1z7s1z7a1wnl1u2g
# jetty.truststore=etc/keystore
# jetty.truststore.password=OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4
# jetty.secure.port=8443


#===========================================================
# HTTPS Connector
# Must be used with jetty-ssl.xml
#-----------------------------------------------------------
--module=https
# jetty.https.port=8443


#===========================================================
# NPN Next Protocol Negotiation 
#
# The SPDY and HTTP/2.0 connectors require NPN.  The jar for
# NPN cannot be downloaded from eclipse. So the --download
# option is used to install the NPN jar if it does not already
# exist
#
#-----------------------------------------------------------
# --exec
# --download=http://repo1.maven.org/maven2/org/mortbay/jetty/npn/npn-boot/1.1.5.v20130313/npn-boot-1.1.5.v20130313.jar:lib/npn/npn-boot-1.1.5.v20130313.jar
# -Xbootclasspath/p:lib/npn/npn-boot-1.1.5.v20130313.jar


#===========================================================
# SPDY Connector
# Requires SSL Context and NPN from above
#-----------------------------------------------------------
# --module=spdy
# jetty.spdy.port=8443


#===========================================================
# Webapplication Deployer
#-----------------------------------------------------------
--module=deploy

# ===========================================================
# Enable JAAS
# -----------------------------------------------------------
# --module=jaas
# jaas.login.conf=etc/login.conf

# ===========================================================
# Enable JNDI 
# -----------------------------------------------------------
# --module=jndi

# ===========================================================
# Enable additional webapp environment configurators 
# -----------------------------------------------------------
# --module=plus

# ===========================================================
# Enable servlet 3.1 annotations
# -----------------------------------------------------------
# --module=annotations

#===========================================================
# Other server features
#-----------------------------------------------------------
# --module=debug
# --module=ipaccess
# --module=stats


#===========================================================
# Low resource managment
#-----------------------------------------------------------
# --module=lowresources
# lowresources.period=1050
# lowresources.lowResourcesIdleTimeout=200
# lowresources.monitorThreads=true
# lowresources.maxConnections=0
# lowresources.maxMemory=0
# lowresources.maxLowResourcesTime=5000

--module=webapp

